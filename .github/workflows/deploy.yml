name: Deploy DevConnect

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Build and test frontend
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: devconnect-app/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd devconnect-app
        npm ci
    
    - name: Build frontend
      run: |
        cd devconnect-app
        npm run build
    
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: devconnect-app/dist/

  # Test backend
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd server
        npm ci
    
    - name: Run backend tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test
        MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}

  # Deploy to Render.com (optional - requires secrets)
  deploy-render:
    needs: [build-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to Render
      run: |
        echo "ðŸš€ Deployment to Render.com"
        echo "This would deploy your app to Render.com"
        echo "Set up automatic deployment in Render dashboard"
        echo "Connect your GitHub repository for auto-deploy"
    
    # Uncomment and configure if you want automated Render deployment
    # - name: Deploy to Render
    #   uses: johnbeynon/render-deploy-action@v1.0.0
    #   with:
    #     service-id: ${{ secrets.RENDER_SERVICE_ID }}
    #     api-key: ${{ secrets.RENDER_API_KEY }}

  # Deploy to Railway.app (optional - requires secrets)
  deploy-railway:
    needs: [build-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to Railway
      run: |
        echo "ðŸš‚ Deployment to Railway.app"
        echo "This would deploy your app to Railway.app"
        echo "Set up automatic deployment in Railway dashboard"
        echo "Connect your GitHub repository for auto-deploy"

  # Build status check
  build-status:
    needs: [build-frontend, test-backend]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check build status
      run: |
        echo "âœ… All builds completed successfully!"
        echo "ðŸŽ‰ Your DevConnect app is ready for deployment!"
        echo ""
        echo "ðŸ“‹ Next steps:"
        echo "1. Push to GitHub (this triggers the workflow)"
        echo "2. Choose deployment platform:"
        echo "   - Render.com (recommended)"
        echo "   - Railway.app"
        echo "   - Heroku"
        echo "3. Follow DEPLOYMENT_GUIDE.md"
        echo "4. Set up MongoDB Atlas"
        echo "5. Configure environment variables"
